// Generated by re2c 3.1 on Sat Sep 14 17:29:14 2024
// re2zig --lang zig --api default -i $INPUT -o $OUTPUT
//
// A generated UDMF lexer.
// This is tracked as part of the Git repository so that building the rest of
// VileTech does not require a user to have the latest bleeding edge of re2zig.



const std = @import("std");
const udmf = @import("udmf.zig");

const Self = @This();

yyinput: [:0]const u8,
yycursor: usize,
yymarker: usize,
yylimit: usize,
pos: usize,

pub fn init(textmap: [:0]const u8) Self {
    return Self{
        .yyinput = textmap,
        .yycursor = 0,
        .yymarker = 0,
        .yylimit = textmap.len - 1,
        .pos = 0,
    };
}

pub fn next(self: *Self) ?udmf.Token {
    outer: while (true) {
        
    var yych: u8 = 0;
    var yyaccept: u32 = 0;
    var yystate: u32 = 0;
    while (true) {
        switch (yystate) {
            0 => {
                yych = self.yyinput[self.yycursor];
                self.yycursor += 1;
                switch (yych) {
                    0x01...0x20 => {
                        yystate = 3;
                        continue;
                    },
                    0x22 => {
                        yystate = 5;
                        continue;
                    },
                    0x2B,
                    0x2D => {
                        yystate = 6;
                        continue;
                    },
                    0x2F => {
                        yystate = 7;
                        continue;
                    },
                    0x30 => {
                        yystate = 8;
                        continue;
                    },
                    0x31...0x39 => {
                        yystate = 9;
                        continue;
                    },
                    0x3B => {
                        yystate = 11;
                        continue;
                    },
                    0x3D => {
                        yystate = 12;
                        continue;
                    },
                    0x41...0x45,
                    0x47...0x4B,
                    0x4D,
                    0x4F...0x52,
                    0x55,
                    0x57...0x5A,
                    0x5F,
                    0x61...0x65,
                    0x67...0x6B,
                    0x6D,
                    0x6F...0x72,
                    0x75,
                    0x77...0x7A => {
                        yystate = 13;
                        continue;
                    },
                    0x46,
                    0x66 => {
                        yystate = 16;
                        continue;
                    },
                    0x4C,
                    0x6C => {
                        yystate = 17;
                        continue;
                    },
                    0x4E,
                    0x6E => {
                        yystate = 18;
                        continue;
                    },
                    0x53,
                    0x73 => {
                        yystate = 19;
                        continue;
                    },
                    0x54,
                    0x74 => {
                        yystate = 20;
                        continue;
                    },
                    0x56,
                    0x76 => {
                        yystate = 21;
                        continue;
                    },
                    0x7B => {
                        yystate = 22;
                        continue;
                    },
                    0x7D => {
                        yystate = 23;
                        continue;
                    },
                    else => {
                        yystate = 1;
                        continue;
                    },
                }
            },
            1 => {
                yystate = 2;
                continue;
            },
            2 => { return null; },
            3 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x01...0x20 => {
                        self.yycursor += 1;
                        yystate = 3;
                        continue;
                    },
                    else => {
                        yystate = 4;
                        continue;
                    },
                }
            },
            4 => { 
                self.pos = self.yycursor;
                continue :outer;
 },
            5 => {
                yyaccept = 0;
                self.yymarker = self.yycursor;
                yych = self.yyinput[self.yycursor];
                if (yych <= 0x00) {
                    yystate = 2;
                    continue;
                }
                yystate = 25;
                continue;
            },
            6 => {
                yyaccept = 0;
                self.yymarker = self.yycursor;
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30 => {
                        self.yycursor += 1;
                        yystate = 29;
                        continue;
                    },
                    0x31...0x39 => {
                        self.yycursor += 1;
                        yystate = 9;
                        continue;
                    },
                    else => {
                        yystate = 2;
                        continue;
                    },
                }
            },
            7 => {
                yyaccept = 0;
                self.yymarker = self.yycursor;
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x2A => {
                        self.yycursor += 1;
                        yystate = 30;
                        continue;
                    },
                    0x2F => {
                        self.yycursor += 1;
                        yystate = 31;
                        continue;
                    },
                    else => {
                        yystate = 2;
                        continue;
                    },
                }
            },
            8 => {
                yyaccept = 0;
                self.yymarker = self.yycursor;
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x2E => {
                        self.yycursor += 1;
                        yystate = 32;
                        continue;
                    },
                    0x30...0x39 => {
                        self.yycursor += 1;
                        yystate = 9;
                        continue;
                    },
                    0x78 => {
                        self.yycursor += 1;
                        yystate = 34;
                        continue;
                    },
                    else => {
                        yystate = 2;
                        continue;
                    },
                }
            },
            9 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x2E => {
                        self.yycursor += 1;
                        yystate = 32;
                        continue;
                    },
                    0x30...0x39 => {
                        self.yycursor += 1;
                        yystate = 9;
                        continue;
                    },
                    else => {
                        yystate = 10;
                        continue;
                    },
                }
            },
            10 => { 
                return self.token(.lit_int);
 },
            11 => { return self.token(.semicolon); },
            12 => { return self.token(.eq); },
            13 => {
                yych = self.yyinput[self.yycursor];
                yystate = 14;
                continue;
            },
            14 => {
                switch (yych) {
                    0x30...0x39,
                    0x41...0x5A,
                    0x5F,
                    0x61...0x7A => {
                        self.yycursor += 1;
                        yystate = 13;
                        continue;
                    },
                    else => {
                        yystate = 15;
                        continue;
                    },
                }
            },
            15 => { 
                return self.token(.ident);
 },
            16 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x41,
                    0x61 => {
                        self.yycursor += 1;
                        yystate = 35;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            17 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x49,
                    0x69 => {
                        self.yycursor += 1;
                        yystate = 36;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            18 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x41,
                    0x61 => {
                        self.yycursor += 1;
                        yystate = 37;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            19 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 38;
                        continue;
                    },
                    0x49,
                    0x69 => {
                        self.yycursor += 1;
                        yystate = 39;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            20 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x48,
                    0x68 => {
                        self.yycursor += 1;
                        yystate = 40;
                        continue;
                    },
                    0x52,
                    0x72 => {
                        self.yycursor += 1;
                        yystate = 41;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            21 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 42;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            22 => { return self.token(.brace_l); },
            23 => { return self.token(.brace_r); },
            24 => {
                yych = self.yyinput[self.yycursor];
                yystate = 25;
                continue;
            },
            25 => {
                switch (yych) {
                    0x00 => {
                        yystate = 26;
                        continue;
                    },
                    0x22 => {
                        self.yycursor += 1;
                        yystate = 27;
                        continue;
                    },
                    0x5C => {
                        self.yycursor += 1;
                        yystate = 28;
                        continue;
                    },
                    else => {
                        self.yycursor += 1;
                        yystate = 24;
                        continue;
                    },
                }
            },
            26 => {
                self.yycursor = self.yymarker;
                if (yyaccept == 0) {
                    yystate = 2;
                    continue;
                } else {
                    yystate = 33;
                    continue;
                }
            },
            27 => { 
                return self.token(.lit_string);
 },
            28 => {
                yych = self.yyinput[self.yycursor];
                if (yych <= 0x00) {
                    yystate = 26;
                    continue;
                }
                self.yycursor += 1;
                yystate = 24;
                continue;
            },
            29 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x2E => {
                        self.yycursor += 1;
                        yystate = 32;
                        continue;
                    },
                    0x30...0x39 => {
                        self.yycursor += 1;
                        yystate = 29;
                        continue;
                    },
                    else => {
                        yystate = 26;
                        continue;
                    },
                }
            },
            30 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x00 => {
                        yystate = 26;
                        continue;
                    },
                    0x2A => {
                        self.yycursor += 1;
                        yystate = 43;
                        continue;
                    },
                    else => {
                        self.yycursor += 1;
                        yystate = 30;
                        continue;
                    },
                }
            },
            31 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x00 => {
                        yystate = 26;
                        continue;
                    },
                    0x0A => {
                        self.yycursor += 1;
                        yystate = 44;
                        continue;
                    },
                    else => {
                        self.yycursor += 1;
                        yystate = 31;
                        continue;
                    },
                }
            },
            32 => {
                yyaccept = 1;
                self.yymarker = self.yycursor;
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39 => {
                        self.yycursor += 1;
                        yystate = 32;
                        continue;
                    },
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 45;
                        continue;
                    },
                    else => {
                        yystate = 33;
                        continue;
                    },
                }
            },
            33 => { 
                return self.token(.lit_float);
 },
            34 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39,
                    0x41...0x46,
                    0x61...0x66 => {
                        self.yycursor += 1;
                        yystate = 46;
                        continue;
                    },
                    else => {
                        yystate = 26;
                        continue;
                    },
                }
            },
            35 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x4C,
                    0x6C => {
                        self.yycursor += 1;
                        yystate = 47;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            36 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x4E,
                    0x6E => {
                        self.yycursor += 1;
                        yystate = 48;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            37 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x4D,
                    0x6D => {
                        self.yycursor += 1;
                        yystate = 49;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            38 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x43,
                    0x63 => {
                        self.yycursor += 1;
                        yystate = 50;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            39 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x44,
                    0x64 => {
                        self.yycursor += 1;
                        yystate = 51;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            40 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x49,
                    0x69 => {
                        self.yycursor += 1;
                        yystate = 52;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            41 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x55,
                    0x75 => {
                        self.yycursor += 1;
                        yystate = 53;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            42 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x52,
                    0x72 => {
                        self.yycursor += 1;
                        yystate = 54;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            43 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x00 => {
                        yystate = 26;
                        continue;
                    },
                    0x2F => {
                        self.yycursor += 1;
                        yystate = 55;
                        continue;
                    },
                    else => {
                        self.yycursor += 1;
                        yystate = 30;
                        continue;
                    },
                }
            },
            44 => { 
                self.pos = self.yycursor;
                continue :outer;
 },
            45 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x2B,
                    0x2D => {
                        self.yycursor += 1;
                        yystate = 56;
                        continue;
                    },
                    0x30...0x39 => {
                        self.yycursor += 1;
                        yystate = 57;
                        continue;
                    },
                    else => {
                        yystate = 26;
                        continue;
                    },
                }
            },
            46 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39,
                    0x41...0x46,
                    0x61...0x66 => {
                        self.yycursor += 1;
                        yystate = 46;
                        continue;
                    },
                    else => {
                        yystate = 10;
                        continue;
                    },
                }
            },
            47 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x53,
                    0x73 => {
                        self.yycursor += 1;
                        yystate = 58;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            48 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 59;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            49 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 60;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            50 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x54,
                    0x74 => {
                        self.yycursor += 1;
                        yystate = 61;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            51 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 62;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            52 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x4E,
                    0x6E => {
                        self.yycursor += 1;
                        yystate = 63;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            53 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 64;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            54 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x54,
                    0x74 => {
                        self.yycursor += 1;
                        yystate = 66;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            55 => { 
                self.pos = self.yycursor;
                continue :outer;
 },
            56 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39 => {
                        self.yycursor += 1;
                        yystate = 57;
                        continue;
                    },
                    else => {
                        yystate = 26;
                        continue;
                    },
                }
            },
            57 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39 => {
                        self.yycursor += 1;
                        yystate = 57;
                        continue;
                    },
                    else => {
                        yystate = 33;
                        continue;
                    },
                }
            },
            58 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 67;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            59 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x44,
                    0x64 => {
                        self.yycursor += 1;
                        yystate = 69;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            60 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x53,
                    0x73 => {
                        self.yycursor += 1;
                        yystate = 70;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            61 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x4F,
                    0x6F => {
                        self.yycursor += 1;
                        yystate = 71;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            62 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x44,
                    0x64 => {
                        self.yycursor += 1;
                        yystate = 72;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            63 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x47,
                    0x67 => {
                        self.yycursor += 1;
                        yystate = 73;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            64 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39,
                    0x41...0x5A,
                    0x5F,
                    0x61...0x7A => {
                        self.yycursor += 1;
                        yystate = 13;
                        continue;
                    },
                    else => {
                        yystate = 65;
                        continue;
                    },
                }
            },
            65 => { return self.token(.kw_true); },
            66 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 75;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            67 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39,
                    0x41...0x5A,
                    0x5F,
                    0x61...0x7A => {
                        self.yycursor += 1;
                        yystate = 13;
                        continue;
                    },
                    else => {
                        yystate = 68;
                        continue;
                    },
                }
            },
            68 => { return self.token(.kw_false); },
            69 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 76;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            70 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x50,
                    0x70 => {
                        self.yycursor += 1;
                        yystate = 77;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            71 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x52,
                    0x72 => {
                        self.yycursor += 1;
                        yystate = 78;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            72 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 80;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            73 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39,
                    0x41...0x5A,
                    0x5F,
                    0x61...0x7A => {
                        self.yycursor += 1;
                        yystate = 13;
                        continue;
                    },
                    else => {
                        yystate = 74;
                        continue;
                    },
                }
            },
            74 => { return self.token(.kw_thing); },
            75 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x58,
                    0x78 => {
                        self.yycursor += 1;
                        yystate = 81;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            76 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x46,
                    0x66 => {
                        self.yycursor += 1;
                        yystate = 83;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            77 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x41,
                    0x61 => {
                        self.yycursor += 1;
                        yystate = 85;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            78 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39,
                    0x41...0x5A,
                    0x5F,
                    0x61...0x7A => {
                        self.yycursor += 1;
                        yystate = 13;
                        continue;
                    },
                    else => {
                        yystate = 79;
                        continue;
                    },
                }
            },
            79 => { return self.token(.kw_sector); },
            80 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x46,
                    0x66 => {
                        self.yycursor += 1;
                        yystate = 86;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            81 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39,
                    0x41...0x5A,
                    0x5F,
                    0x61...0x7A => {
                        self.yycursor += 1;
                        yystate = 13;
                        continue;
                    },
                    else => {
                        yystate = 82;
                        continue;
                    },
                }
            },
            82 => { return self.token(.kw_vertex); },
            83 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39,
                    0x41...0x5A,
                    0x5F,
                    0x61...0x7A => {
                        self.yycursor += 1;
                        yystate = 13;
                        continue;
                    },
                    else => {
                        yystate = 84;
                        continue;
                    },
                }
            },
            84 => { return self.token(.kw_linedef); },
            85 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x43,
                    0x63 => {
                        self.yycursor += 1;
                        yystate = 88;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            86 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39,
                    0x41...0x5A,
                    0x5F,
                    0x61...0x7A => {
                        self.yycursor += 1;
                        yystate = 13;
                        continue;
                    },
                    else => {
                        yystate = 87;
                        continue;
                    },
                }
            },
            87 => { return self.token(.kw_sidedef); },
            88 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x45,
                    0x65 => {
                        self.yycursor += 1;
                        yystate = 89;
                        continue;
                    },
                    else => {
                        yystate = 14;
                        continue;
                    },
                }
            },
            89 => {
                yych = self.yyinput[self.yycursor];
                switch (yych) {
                    0x30...0x39,
                    0x41...0x5A,
                    0x5F,
                    0x61...0x7A => {
                        self.yycursor += 1;
                        yystate = 13;
                        continue;
                    },
                    else => {
                        yystate = 90;
                        continue;
                    },
                }
            },
            90 => { return self.token(.kw_namespace); },
            else => { @panic("internal lexer error"); },
        }
    }

    }
}

fn token(self: *Self, kind: udmf.Token.Kind) udmf.Token {
    const start = self.pos;
    self.pos = self.yycursor;

    return udmf.Token{
        .kind = kind,
        .start = start,
        .end = self.yycursor,
    };
}
